version: '3.8'
 
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: legal_advocacy_db
    environment:
      POSTGRES_DB: legal_advocacy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5439:5432"   # ðŸ‘ˆ Changed to an unused host port
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - legal_advocacy_network
 
  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: legal_advocacy_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - legal_advocacy_network
 
  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: legal_advocacy_api
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/legal_advocacy
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      API_HOST: 0.0.0.0
      API_PORT: 8000
    ports:
      - "8003:8000" # Note: Port 8000 is also in use by another container (id_photo_api). This will be your next error. Consider changing it to 8001:8000
    volumes:
      - audio_files:/app/audio_files
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - legal_advocacy_network
 
# Top-level declaration for networks
networks:
  legal_advocacy_network:
    driver: bridge
 
# Top-level declaration for named volumes
volumes:
  postgres_data:
  redis_data:
  audio_files: